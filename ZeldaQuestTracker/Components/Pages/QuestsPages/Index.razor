@page "/quests"
@using Microsoft.AspNetCore.Components.QuickGrid
@inject ZeldaQuestTracker.Data.ZeldaQuestTrackerContext DB
@using ZeldaQuestTracker.Components.Model

<PageTitle>Quest List</PageTitle>

<h1>Quest List</h1>

<p>
    <a href="quests/create" class="btn btn-primary">Create New</a>
</p>


<MudTable Items="DB.Quests">
    <HeaderContent>
        <MudTh>Quest Name</MudTh>
        <MudTh>Youtube Video</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate Context="quests">
        <MudTd>
            <MudLink Href="@EnsureHttpPrefix(quests.Walkthrough)">@quests.Name</MudLink>
        </MudTd>
        <MudTd>
            <MudLink Href="@EnsureHttpPrefix(quests.Video)"><img src="@GetYoutubeThumbnailUrl(quests.Video)" /></MudLink>
        </MudTd>
        <MudTd>
            <MudLink Href="@($"quests/edit?id={quests.Id}")">Edit</MudLink> |
            <MudLink Href="@($"quests/details?id={quests.Id}")">Details</MudLink> |
            <MudLink Href="@($"quests/delete?id={quests.Id}")">Delete</MudLink>
        </MudTd>
    </RowTemplate>
</MudTable>

@code {
    public static string EnsureHttpPrefix(string url)
    {
        if (string.IsNullOrEmpty(url))
            return url; // Return the original URL if it's null or empty

        // Check if the URL starts with "http://" or "https://", if not, prepend "http://"
        if (url.StartsWith("http://") || url.StartsWith("https://"))
            return url;

        return "http://"+url;
    }

    public static string GetYoutubeThumbnailUrl(string videoUrl)
    {
        if (string.IsNullOrEmpty(videoUrl) || !videoUrl.Contains("v="))
        {
            return string.Empty;
        }
        else
        {
            return $"https://img.youtube.com/vi/{videoUrl.Split("v=")[1]}/0.jpg";
        }
    }
}